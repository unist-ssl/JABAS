# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import common_pb2 as common__pb2
import scheduler_to_worker_pb2 as scheduler__to__worker__pb2


class SchedulerToWorkerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RunJob = channel.unary_unary(
                '/SchedulerToWorker/RunJob',
                request_serializer=scheduler__to__worker__pb2.RunJobRequest.SerializeToString,
                response_deserializer=common__pb2.Empty.FromString,
                )
        self.Reset = channel.unary_unary(
                '/SchedulerToWorker/Reset',
                request_serializer=common__pb2.Empty.SerializeToString,
                response_deserializer=common__pb2.Empty.FromString,
                )
        self.Shutdown = channel.unary_unary(
                '/SchedulerToWorker/Shutdown',
                request_serializer=common__pb2.Empty.SerializeToString,
                response_deserializer=common__pb2.Empty.FromString,
                )


class SchedulerToWorkerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RunJob(self, request, context):
        """Start list of jobs on worker.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reset(self, request, context):
        """Resets the worker.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Shutdown(self, request, context):
        """Shuts down the worker.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchedulerToWorkerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RunJob': grpc.unary_unary_rpc_method_handler(
                    servicer.RunJob,
                    request_deserializer=scheduler__to__worker__pb2.RunJobRequest.FromString,
                    response_serializer=common__pb2.Empty.SerializeToString,
            ),
            'Reset': grpc.unary_unary_rpc_method_handler(
                    servicer.Reset,
                    request_deserializer=common__pb2.Empty.FromString,
                    response_serializer=common__pb2.Empty.SerializeToString,
            ),
            'Shutdown': grpc.unary_unary_rpc_method_handler(
                    servicer.Shutdown,
                    request_deserializer=common__pb2.Empty.FromString,
                    response_serializer=common__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SchedulerToWorker', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SchedulerToWorker(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RunJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SchedulerToWorker/RunJob',
            scheduler__to__worker__pb2.RunJobRequest.SerializeToString,
            common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SchedulerToWorker/Reset',
            common__pb2.Empty.SerializeToString,
            common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Shutdown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SchedulerToWorker/Shutdown',
            common__pb2.Empty.SerializeToString,
            common__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
